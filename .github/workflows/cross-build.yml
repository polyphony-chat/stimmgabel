name: Rust Cross Compile Binary Release

on:
  push:
    tags:
      - "*"

jobs:
  build-linux:
    name: Build and Release for Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - i686-unknown-linux-gnu
          - aarch64-unknown-linux-gnu

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install cross
        run: |
          sudo apt-get install -y qemu-user
          cargo install cross

      - name: Build
        run: |
          rustup target add ${{ matrix.target }}
          cross build --target ${{ matrix.target }} --release
          mkdir -p ./artifacts
          mv ./target/${{ matrix.target }}/release/stimmgabel ./artifacts/stimmgabel-${{ matrix.target }}-${{ github.event.inputs.tag }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: stimmgabel-${{ matrix.target }}-${{ github.event.inputs.tag }}
          path: ./artifacts/stimmgabel-${{ matrix.target }}-${{ github.event.inputs.tag }}

  build-windows:
    name: Build and Release for Windows
    runs-on: windows-latest
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-gnu
          - aarch64-pc-windows-msvc

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Rust
        run: |
          choco install rustup.install
          rustup install stable
          rustup update stable
          rustup default stable
          rustup target add ${{ matrix.target }}

      - name: Build
        run: |
          cargo build --target ${{ matrix.target }} --release
          mkdir .\artifacts
          move .\target\${{ matrix.target }}\release\stimmgabel.exe .\artifacts\stimmgabel-${{ matrix.target }}-${{ github.event.inputs.tag }}.exe

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: stimmgabel-${{ matrix.target }}-${{ github.event.inputs.tag }}.exe
          path: .\artifacts\stimmgabel-${{ matrix.target }}-${{ github.event.inputs.tag }}.exe

  build-macos:
    name: Build and Release for MacOS
    runs-on: macos-latest
    strategy:
      matrix:
        target:
          - aarch64-apple-darwin
          - x86_64-apple-darwin

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build
        run: |
          rustup target add ${{ matrix.target }}
          cargo build --target ${{ matrix.target }} --release
          mkdir -p ./artifacts
          mv ./target/${{ matrix.target }}/release/stimmgabel ./artifacts/stimmgabel-${{ matrix.target }}-${{ github.event.inputs.tag }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: stimmgabel-${{ matrix.target }}-${{ github.event.inputs.tag }}
          path: ./artifacts/stimmgabel-${{ matrix.target }}-${{ github.event.inputs.tag }}

  release:
    name: Release
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts/

      - name: Create and upload a Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          title: "Release ${{ github.ref }}"
          files: |
            ./artifacts/*
